apiVersion: v1
kind: Service
metadata:
  name: rethinkdb
  labels:
    app: rethinkdb
spec:
  type: LoadBalancer
  annotations:
    metallb.universe.tf/address-pool: workspaces
  ports:
    - name: client
      port: 28015
      targetPort: 28015
  selector:
    app: rethinkdb
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rethinkdb
  labels:
    app: rethinkdb
spec:
  serviceName: rethinkdb
  replicas: 1
  selector:
    matchLabels:
      app: rethinkdb
  template:
    metadata:
      labels:
        app: rethinkdb
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        fsGroup: 1000
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: rethinkdb
          image: rethinkdb:2.4
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 28015
              name: client
            - containerPort: 29015
              name: cluster
            - containerPort: 8080
              name: admin
          command: ["rethinkdb"]
          args: ["--bind","all","--cache-size","128"]
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsUser: 1000
            runAsGroup: 1000
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 40
            periodSeconds: 20
            timeoutSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
          # Optional: users can set STORAGE_CLASS to control provisioning
          storage-class: "${STORAGE_CLASS:-}"
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: "1Gi"
